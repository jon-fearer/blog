name: Blog Deploy

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm ci
        working-directory: site
      - name: Lint
        run: npm run lint
        working-directory: site
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm ci
        working-directory: site
      - name: Test
        run: npm test
        working-directory: site
  deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm ci
        working-directory: site
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build Application
        run: npx ng build --progress false --configuration production --output-path dist
        working-directory: site
      - name: Copy Artifacts to S3
        run: aws s3 sync --delete . ${{ secrets.SITE_S3_BUCKET }}
        working-directory: site/dist
      - name: Invalidate CDN Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths '/*'
